---
- hosts: all
  become: yes
  become_method: sudo
  vars:
    doc_root: "/var/www/html"
    create_containers: 4
    default_container_name: docker
    default_container_image: ubuntu
    default_container_command: sleep 1d

  tasks:
    - name: Install Apache Packages
      yum: name=httpd state=present
      when: ansible_os_family == "RedHat"

    - name: Start Apache Service
      service: name=httpd state=started enabled=True
      when: ansible_os_family == "RedHat"

    - name: Install Apache Packages on Ubuntu
      apt: name=apache2 state=present
      when: ansible_os_family == "Debian"

    - name: Start Apache Service
      service: name=apache2 state=started enabled=True
      when: ansible_os_family == "Debian"
   
    - name: Deploy Sample Sites Files
      template: src=templates/index.j2 dest=/var/www/html/index.html
      notify: 
      - Restart Apache
  
    - name: Deploy Sample Sites Files
      template: src=templates/info.j2 dest=/var/www/html/info.html

    - name: Start Java Service 
      apt: name=openjdk-8-jdk state=present

    - name: Install aptitude using apt
      apt: name=aptitude state=latest update_cache=yes force_apt_get=yes

    - name: Install required system packages
      apt: name={{ item }} state=latest update_cache=yes
      loop: [ 'apt-transport-https', 'ca-certificates', 'curl', 'software-properties-common', 'python3-pip', 'virtualenv', 'python3-setuptools']

    - name: Add Docker GPG apt Key
      apt_key:
        url: https://download.docker.com/linux/ubuntu/gpg
        state: present

    - name: Add Docker Repository
      apt_repository:
        repo: deb https://download.docker.com/linux/ubuntu bionic stable
        state: present

    - name: Update apt and install docker-ce
      apt: update_cache=yes name=docker-ce state=latest

    - name: Install Docker Module for Python
      pip:
        name: docker

    - name: Pull default Docker image
      docker_image:
        name: "{{ default_container_image }}"
        source: pull

    # Creates the number of containers defined by the variable create_containers, using values from vars file
    - name: Create default containers
      docker_container:
        name: "{{ default_container_name }}{{ item }}"
        image: "{{ default_container_image }}"
        command: "{{ default_container_command }}"
        state: present
      with_sequence: count={{ create_containers }}
  
    
  handlers:
    - name: Restart Apache
      service: name=apache2 state=restarted
